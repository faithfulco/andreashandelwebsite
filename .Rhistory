knitr::include_graphics(knitr::plot_crop("sirdiagram.png"))
library(flowdiagramr)
remotes::install_github('flowdiagramr')
remotes::install_github('andreashandel/flowdiagramr')
remotes::install_github('andreashandel/flowdiagramr')
install.packages(c("bibliometrix", "BiocManager", "blob", "blogdown", "bookdown", "brio", "bslib", "cachem", "callr", "car", "colorspace", "corrplot", "cpp11", "credentials", "curl", "data.table", "dbplyr", "dendextend", "desc", "devtools", "diffobj", "DSAIDE", "DSAIRM", "DT", "fansi", "farver", "flextable", "gert", "ggforce", "ggimage", "ggplot2", "ggplotify", "ggraph", "ggsignif", "gh", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httpuv", "ipred", "isoband", "jquerylib", "kableExtra", "knitr", "later", "lhs", "lme4", "lubridate", "magick", "maptools", "MatrixModels", "matrixStats", "mime", "officer", "openssl", "openxlsx", "pbkrtest", "pkgload", "plotly", "processx", "promises", "ps", "quantreg", "R.cache", "R6", "ragg", "Rcpp", "RcppArmadillo", "readr", "remotes", "reprex", "rio", "rmarkdown", "roxygen2", "rvcheck", "rversions", "rvest", "sass", "scholar", "servr", "showtext", "SparseM", "statmod", "stringdist", "stringi", "svglite", "sysfonts", "systemfonts", "testthat", "textshaping", "tidyselect", "tidytext", "tidyverse", "tinytex", "tweenr", "viridis", "viridisLite", "waldo", "withr", "writexl", "xfun", "XML", "zip"))
install.packages('rlang')
remotes::install_github('andreashandel/flowdiagramr')
library(blogdown)
build_site()
check_hugo()
check_site()
?update_hugo
update_hugo()
install_hugo()
check_site()
library(blogdown)
check_site()
check_site()
blogdown::build_site(build_rmd = 'timestamp')
install.packages('geosphere')
install.packages(c('cowplot','geosphere','scholar','wordcloud',
'bibliometrix','tidytext','visdat','kableExtra','janitor'))
blogdown::build_site(build_rmd = 'timestamp')
check_site()
build_site()
blogdown::build_site(build_rmd = 'timestamp')
library(blogdown)
check_site()
blogdown::build_site(build_rmd = 'timestamp')
check_site()
build_site()
build_site()
build_site()
check_site()
blogdown::build_site(build_rmd = 'timestamp')
check_site()
build_site()
library(blogdown)
build_site()
serve_site()
knitr::opts_chunk$set(echo = TRUE)
nobs = nrow(dfnew)
knitr::opts_chunk$set(echo = TRUE)
library('ggplot2')
library('readr')
library('dplyr')
library('stringr')
library('tidytuesdayR')
#tuesdata <- tidytuesdayR::tt_load('2021-09-28')
papers <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-28/papers.csv')
authors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-28/authors.csv')
programs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-28/programs.csv')
paper_authors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-28/paper_authors.csv')
paper_programs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-28/paper_programs.csv')
colnames(papers)
colnames(authors)
colnames(programs)
colnames(paper_authors)
colnames(paper_programs)
df <- left_join(papers, paper_authors) %>%
left_join(authors) %>%
left_join(paper_programs) %>%
left_join(programs)%>%
mutate(
catalogue_group = str_sub(paper, 1, 1),
catalogue_group = case_when(
catalogue_group == "h" ~ "Historical",
catalogue_group == "t" ~ "Technical",
catalogue_group == "w" ~ "General"
),
.after = paper
)
glimpse(df)
smalldf <- df %>% filter(grepl("Wagner",name))
print(unique(smalldf$name))
smalldf <- df %>% filter(grepl("Hannes",name))
print(unique(smalldf$name))
#looking at missing data for each variable
nas <- colSums(is.na(df))
print(nas)
n_authors = length(unique(df$author))
n_papers = length(unique(df$title))
print(n_authors)
print(n_papers)
#using base R here, can of course also do that with tidyverse syntax
dfdup <- papers[duplicated(papers$title),]
print(dfdup$title)
dfnew <- df %>% filter(!is.na(user_nber)) %>%
group_by(user_nber) %>%
summarise(n_papers = n() ) %>%
arrange(desc(n_papers)) %>%
mutate(allpapers = cumsum(n_papers))
dfnew$id = 1:nrow(dfnew) #add an ID variable for plotting
p1 <- dfnew %>% ggplot(aes(n_papers)) + geom_histogram()
plot(p1)
head(dfnew,n=10)
nobs = nrow(dfnew)
totpapers = max(dfnew$allpapers)
p2 <- dfnew %>% ggplot(aes(x=id, y=allpapers)) +
geom_point() +
theme(legend.position="none") +
geom_segment(aes(x = floor(nobs*0.2), y = 1, xend = floor(nobs*0.2), yend = floor(totpapers*0.8) ), colour = "red", linetype="dashed", size=1) +
geom_segment(aes(x = 1, y = floor(totpapers*0.8), xend = floor(nobs*0.2), yend = floor(totpapers*0.8) ), colour = "red", linetype="dashed", size=1)
plot(p2)
hist(dfnew)
hist(dfnew$n_papers)
plot(dfnew$n_papers)
plot(dfnew$n_papers,log="xy")
summary(dfnew$n_papers)
boxplot(dfnew$n_papers)
p1a <- dfnew %>% ggplot(aes(n_papers)) + geom_violin()
plot(p1a)
?geom_violin
p1a <- dfnew %>% ggplot(aes(x=1, y=n_papers)) + geom_violin()
plot(p1a)
glimpse(df)
programs
head(df$name)
head(df$new)
head(dfnew)
sum(dfnew$n_papers>100)
sum(dfnew$n_papers>50)
library(blogdown)
check_site()
build_site()
